{"version":3,"file":"static/js/237.fb596825.chunk.js","mappings":"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","sources":["pages/Contact.jsx","../node_modules/emailjs-com/es/store/store.js","../node_modules/emailjs-com/es/utils/validateParams.js","../node_modules/emailjs-com/es/models/EmailJSResponseStatus.js","../node_modules/emailjs-com/es/api/sendPost.js","../node_modules/emailjs-com/es/index.js","../node_modules/emailjs-com/es/methods/init/init.js","../node_modules/emailjs-com/es/methods/send/send.js","../node_modules/emailjs-com/es/methods/sendForm/sendForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport emailjs from 'emailjs-com';\r\n\r\nconst Contact = () => {\r\n\tconst [formData, setFormData] = useState({\r\n\t\tname: '',\r\n\t\temail: '',\r\n\t\tmessage: '',\r\n\t});\r\n\tconst [successMessage, setSuccessMessage] = useState('');\r\n\r\n\tconst handleChange = (e) => {\r\n\t\tconst { name, value } = e.target;\r\n\t\tsetFormData({\r\n\t\t\t...formData,\r\n\t\t\t[name]: value,\r\n\t\t});\r\n\t};\r\n\r\n\tconst sendEmail = (e) => {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst templateParams = {\r\n\t\t\tfrom_name: formData.name,\r\n\t\t\tfrom_email: formData.email,\r\n\t\t\tmessage: formData.message,\r\n\t\t};\r\n\r\n\t\temailjs\r\n\t\t\t.send(\r\n\t\t\t\t'service_rn45rec', //  Service ID\r\n\t\t\t\t'template_dewkewe', // Template ID\r\n\t\t\t\ttemplateParams, // Template parameters\r\n\t\t\t\t'ouIL0a7IpDVcizQLE', // Public Key\r\n\t\t\t)\r\n\t\t\t.then(\r\n\t\t\t\t(response) => {\r\n\t\t\t\t\tconsole.log('SUCCESS!', response.status, response.text);\r\n\t\t\t\t\tsetSuccessMessage('Meldingen ble sendt!');\r\n\t\t\t\t},\r\n\t\t\t\t(error) => {\r\n\t\t\t\t\tconsole.log('FAILED...', error);\r\n\t\t\t\t\tsetSuccessMessage(\r\n\t\t\t\t\t\t'Kunne ikke sende meldingen. Vennligst prøv igjen.',\r\n\t\t\t\t\t);\r\n\t\t\t\t},\r\n\t\t\t);\r\n\r\n\t\tsetFormData({ name: '', email: '', message: '' });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<section id=\"contact\" className=\"py-20 bg-white text-center\">\r\n\t\t\t<div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n\t\t\t\t<h2 className=\"text-4xl font-bold text-gray-800 mb-8\">\r\n\t\t\t\t\tKontakt\r\n\t\t\t\t</h2>\r\n\t\t\t\t<p className=\"text-lg text-gray-600 mb-4\">\r\n\t\t\t\t\tHar du noen spørsmål? Ta gjerne kontakt med meg.\r\n\t\t\t\t</p>\r\n\t\t\t\t<form onSubmit={sendEmail} className=\"max-w-lg mx-auto\">\r\n\t\t\t\t\t<div className=\"mb-4\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\tplaceholder=\"Ditt navn\"\r\n\t\t\t\t\t\t\tvalue={formData.name}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tclassName=\"w-full p-4 border border-gray-300 rounded-lg\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mb-4\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\tplaceholder=\"Din e-post\"\r\n\t\t\t\t\t\t\tvalue={formData.email}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tclassName=\"w-full p-4 border border-gray-300 rounded-lg\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mb-4\">\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tname=\"message\"\r\n\t\t\t\t\t\t\tplaceholder=\"Din melding\"\r\n\t\t\t\t\t\t\tvalue={formData.message}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\tclassName=\"w-full p-4 border border-gray-300 rounded-lg\"\r\n\t\t\t\t\t\t\trows=\"5\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button className=\"px-6 py-3 bg-lollipop text-white font-semibold rounded-lg\">\r\n\t\t\t\t\t\tSend melding\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t\t{successMessage && (\r\n\t\t\t\t\t<p className=\"mt-4 text-lg text-green-500\">\r\n\t\t\t\t\t\t{successMessage}\r\n\t\t\t\t\t</p>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Contact;\r\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (userID, serviceID, templateID) => {\n    if (!userID) {\n        throw 'The user ID is required. Visit https://dashboard.emailjs.com/admin/integration';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} userID - set the EmailJS user ID\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (userID, origin = 'https://api.emailjs.com') => {\n    store._userID = userID;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, userID) => {\n    const uID = userID || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.2.0',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} userID - the EmailJS user ID\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, userID) => {\n    const uID = userID || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.2.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n"],"names":["Contact","formData","setFormData","useState","name","email","message","successMessage","setSuccessMessage","handleChange","e","value","target","_objectSpread","_jsx","id","className","children","_jsxs","onSubmit","preventDefault","templateParams","from_name","from_email","emailjs","then","response","console","log","status","text","error","type","placeholder","onChange","required","rows","store","_origin","validateParams","userID","serviceID","templateID","EmailJSResponseStatus","constructor","httpResponse","this","responseText","sendPost","url","data","headers","arguments","length","undefined","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","_ref","responseStatus","_ref2","open","Object","keys","forEach","key","setRequestHeader","send","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","form","currentForm","document","querySelector","nodeName","findHTMLForm","FormData","append"],"sourceRoot":""}