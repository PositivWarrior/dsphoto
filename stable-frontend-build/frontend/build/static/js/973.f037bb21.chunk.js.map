{"version":3,"file":"static/js/973.f037bb21.chunk.js","mappings":"iJAGA,MA0HA,EAzFuBA,IAMhB,IANiB,IACvBC,EAAG,IACHC,EAAG,UACHC,EAAS,MACTC,EAAQ,QAAO,SACfC,GAAW,GACXL,EACA,MAAOM,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCC,EAAOC,IAAYF,EAAAA,EAAAA,WAAS,IAC5BG,EAAcC,IAAmBJ,EAAAA,EAAAA,UAAS,IAG3CK,EAAc,CAAC,IAAK,IAAK,IAAK,KAAM,OAE1CC,EAAAA,EAAAA,YAAU,KAET,MAAMC,GAAmBC,EAAAA,EAAAA,IAAqBf,EAAK,IAAK,QACxDW,EAAgBG,GAGhB,MAAME,EAAM,IAAIC,MAChBD,EAAIhB,IAAMc,EACVE,EAAIE,OAAS,IAAMZ,GAAW,GAC9BU,EAAIG,QAAU,KAEbC,QAAQC,KAAK,6BAA8BP,GAC3CL,GAAS,GACT,MAAMa,EAAc,IAAIL,MACxBK,EAAYtB,IAAMA,EAClBsB,EAAYJ,OAAS,IAAMZ,GAAW,GACtCgB,EAAYH,QAAU,IAAMV,GAAS,EAAK,CAC1C,GACC,CAACT,IASJ,GAAIQ,EACH,OACCe,EAAAA,EAAAA,KAAA,OACCrB,UAAS,gDAAAsB,OAAkDtB,GAAYuB,UAEvEF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,2BAKT,MAAM,MAAEC,EAAK,OAAEC,GAA8B3B,EA/DrC4B,SAAS,YACT,CACNF,MAAO,IACPC,OAAQ,KAGH,CACND,MAAO,KACPC,OAAQ,KAyDT,OACCE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAL,SAAA,CACEpB,IACAkB,EAAAA,EAAAA,KAAA,OAAKrB,UAAS,6BAAAsB,OAA+BtB,MAE9CqB,EAAAA,EAAAA,KAAA,OACCvB,IAAKU,GAAgBV,EACrB+B,OAxBKnB,EACLoB,KAAKC,GAAE,GAAAT,QAAQT,EAAAA,EAAAA,IAAqBf,EAAKiC,EAAI,QAAO,KAAAT,OAAIS,EAAE,OAC1DC,KAAK,MAuBLR,MAAOA,EACPC,OAAQA,EACR1B,IAAKA,EACLC,UAAS,GAAAsB,OAAKtB,EAAS,KAAAsB,OAAInB,EAAU,SAAW,IAChDA,QAASD,EAAW,QAAU,OAC9BD,MAAOA,EACPgC,MAAO,CAAEC,QAAS/B,EAAU,EAAI,GAChCgC,cAAejC,EAAW,OAAS,OACnCkC,QAAUC,IAETnB,QAAQC,KAAK,wBAAyBkB,EAAEC,OAAOxC,KAC3CuC,EAAEC,OAAOxC,MAAQA,IACpBuC,EAAEC,OAAOxC,IAAMA,EAChB,IAGDI,IACAmB,EAAAA,EAAAA,KAAA,QACCkB,IAAI,UACJC,KAAMhC,GAAgBV,EACtB2C,GAAG,QACHN,cAAc,WAGd,C,qFCtHL,MA0KA,EA1KiBtC,IAAiB,IAAhB,OAAE6C,GAAQ7C,EAC3B,MAAO8C,EAAcC,IAAmBvC,EAAAA,EAAAA,UAAS,IAC1CwC,EAAaC,IAAkBzC,EAAAA,EAAAA,WAAS,IACxC0C,EAAiBC,IAAsB3C,EAAAA,EAAAA,UAAS,OAGvDM,EAAAA,EAAAA,YAAU,KACT,MAAMsC,EAAWC,aAAY,KAC5BN,GAAiBO,IAAeA,EAAY,GAAKT,EAAOU,QAAO,GAC7D,KAGH,MAAO,IAAMC,cAAcJ,EAAS,GAClC,CAACP,EAAOU,SAsDX,OAfAzC,EAAAA,EAAAA,YAAU,KAUL+B,EAAOU,OAAS,GARME,MACzB,IAAK,IAAIC,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC5B,MAAMC,GAAab,EAAeY,GAAKb,EAAOU,QAClC,IAAIrC,OACZjB,IAAM4C,EAAOc,GAAWC,GAC7B,GAIAH,EACD,GACE,CAACX,EAAcD,KAGjBf,EAAAA,EAAAA,MAAA,OAAAJ,SAAA,CAEEsB,IACAlB,EAAAA,EAAAA,MAAA,OACC3B,UAAU,6EACV0D,QAzCeC,KAClBb,GAAe,GACfE,EAAmB,KAAK,EAuCAzB,SAAA,EAErBF,EAAAA,EAAAA,KAAA,OACCvB,IAAK4C,EAAOK,GAAiBU,IAC7B1D,IAAI,WACJC,UAAU,gEACViC,MAAO,CAAE2B,OAAQ,YAAaC,UAAW,WAI1CxC,EAAAA,EAAAA,KAAA,UACCqC,QAxCmBrB,IACvBA,EAAEyB,kBACFd,GACEG,IAAeA,EAAY,EAAIT,EAAOU,QAAUV,EAAOU,QACxD,EAqCGpD,UAAU,6HAA4HuB,SACtI,YAGDF,EAAAA,EAAAA,KAAA,UACCqC,QApDmBrB,IACvBA,EAAEyB,kBACFd,GAAoBG,IAAeA,EAAY,GAAKT,EAAOU,QAAO,EAmD9DpD,UAAU,8HAA6HuB,SACvI,eAOHI,EAAAA,EAAAA,MAAA,OAAK3B,UAAU,iEAAgEuB,SAAA,CAE7EmB,EAAOZ,KAAI,CAACiC,EAAOC,KACnB3C,EAAAA,EAAAA,KAAA,OAECrB,UAAS,qDAAAsB,OACR0C,IAAUrB,EAAe,cAAgB,aACvCpB,UAEHF,EAAAA,EAAAA,KAAC4C,EAAAA,EAAc,CACdnE,IAAKiE,EAAMN,IACX1D,IAAG,SAAAuB,OAAW0C,GACdhE,UAAU,0CACVE,SAAoB,IAAV8D,KATNA,MAeP3C,EAAAA,EAAAA,KAAA,UACCqC,QApGcQ,KACjBtB,GACEO,IAAeA,EAAY,EAAIT,EAAOU,QAAUV,EAAOU,QACxD,EAkGEpD,UAAU,0IAQOuB,SACjB,YAGDF,EAAAA,EAAAA,KAAA,UACCqC,QAtHcS,KACjBvB,GAAiBO,IAAeA,EAAY,GAAKT,EAAOU,QAAO,EAsH5DpD,UAAU,8IASNuB,SACJ,eAMFF,EAAAA,EAAAA,KAAA,OAAKrB,UAAU,6DAA4DuB,SACzEmB,EAAOZ,KAAI,CAACiC,EAAOC,KACnB3C,EAAAA,EAAAA,KAAA,OAECrB,UAAU,+BACV0D,QAASA,IAjIKM,KAClBhB,EAAmBgB,GACnBlB,GAAe,EAAK,EA+HDsB,CAAUJ,GAAQzC,UAEjCF,EAAAA,EAAAA,KAAC4C,EAAAA,EAAc,CACdnE,IAAKiE,EAAMN,IACX1D,IAAKgE,EAAMM,OAAK,iBAAA/C,OAAqB0C,EAAQ,GAC7ChE,UAAU,gDACVE,SAAU8D,EAAQ,GAAsB,IAAjBrB,KARnBqB,SAaH,E,+BCjKR,MA4GA,EA1GwBM,KACvB,MAAM,SAAEC,IAAaC,EAAAA,EAAAA,MACdC,EAAcC,IAAmBrE,EAAAA,EAAAA,UAAS,OAC1CF,EAASC,IAAcC,EAAAA,EAAAA,WAAS,IAChCsE,EAAiBC,IAAsBvE,EAAAA,EAAAA,UAAS,KAChDwE,EAAaC,IAAkBzE,EAAAA,EAAAA,UAAS,GACzC0E,GAAWC,EAAAA,EAAAA,MACXC,EAAeF,EAASG,SAASxD,SAAS,WAEhDf,EAAAA,EAAAA,YAAU,KACiBwE,WACzB,IACC,MACMC,SADiBC,EAAAA,GAAIC,IAAI,oBAADhE,OAAqBiD,KAC7Ba,KAGhBG,EAAwB,CAC7BlB,MAAOE,EAASiB,OAAO,GAAGC,cAAgBlB,EAASmB,MAAM,GACzDhD,OAAQ0C,EAAKO,MACZ,CAACC,EAAGC,KAAC,IAAAC,EAAAC,EAAA,OAAa,QAARD,EAACF,EAAEI,aAAK,IAAAF,EAAAA,EAAI,IAAa,QAAZC,EAAKF,EAAEG,aAAK,IAAAD,EAAAA,EAAI,EAAE,KAI3CrB,EAAgBa,GAChBX,EACCW,EAAsB7C,OAAOgD,MAAM,EA3BhB,IA6BpBtF,GAAW,EACZ,CAAE,MAAOE,GACRY,QAAQZ,MAAM,+BAAgCA,EAC/C,GAGD2F,GACAnB,EAAe,EAAE,GACf,CAACP,EAAUQ,EAASG,WAEvB,MASMgB,GAA4B,OAAZzB,QAAY,IAAZA,OAAY,EAAZA,EAAc/B,OAAOU,QAASuB,EAAgBvB,OAEpE,OAAIjD,GAAgBkB,EAAAA,EAAAA,KAAC8E,EAAAA,EAAc,IAE9B1B,GASJ9C,EAAAA,EAAAA,MAAA,OAAK3B,UAAU,qCAAoCuB,SAAA,EAClDI,EAAAA,EAAAA,MAAA,MAAI3B,UAAU,iDAAgDuB,SAAA,CAC5DkD,EAAaJ,MAAM,YACpB1C,EAAAA,EAAAA,MAACyE,EAAAA,GAAM,CAAA7E,SAAA,EACNF,EAAAA,EAAAA,KAAA,SAAAE,SACE0D,EACE,8BAA6B,GAAA3D,OACd,OAAZmD,QAAY,IAAZA,OAAY,EAAZA,EAAcJ,MAAK,+BAE1BhD,EAAAA,EAAAA,KAAA,QACCgF,KAAK,cACLC,QAAO,WAAAhF,OAAyB,OAAZmD,QAAY,IAAZA,OAAY,EAAZA,EAAcJ,MAAK,kCAGxChD,EAAAA,EAAAA,KAAA,QACCkB,IAAI,aACJC,KAAK,+CACL+D,YAAY,eAEblF,EAAAA,EAAAA,KAAA,QACCkB,IAAI,eACJC,KAAK,uDAMPmC,EAAgBvB,OAAS,IACzB/B,EAAAA,EAAAA,KAACmF,EAAQ,CAAC9D,OAAQiC,IAIlBuB,IACA7E,EAAAA,EAAAA,KAAA,OAAKrB,UAAU,mBAAkBuB,UAChCI,EAAAA,EAAAA,MAAA,UACC+B,QAzDkB+C,KACtB,MAAMC,EAAW7B,EAAc,EAEzB8B,EA1CgB,EA0CLD,EAEjB9B,EAAmBH,EAAa/B,OAAOgD,MAHpB,EAGsCiB,IACzD7B,EAAe4B,EAAS,EAoDpB1G,UAAU,kFAAiFuB,SAAA,CAC3F,OAlGkB,EAmGG,SAAOoD,EAAgBvB,OAAO,MAAI,IACtDqB,EAAa/B,OAAOU,OAAO,aA9C/B/B,EAAAA,EAAAA,KAAA,MAAIrB,UAAU,iCAAgCuB,SAAC,sBAkD1C,C","sources":["components/ImageOptimizer.jsx","components/Carousel.jsx","pages/GalleryCategory.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { getOptimizedImageUrl } from '../api';\r\n\r\nconst createWebPUrl = (url) => {\r\n\t// Check if URL is from S3\r\n\tif (url.includes('ds-photo.s3.eu-north-1.amazonaws.com')) {\r\n\t\t// We'll use the Cloudinary service to convert and resize S3 images on-the-fly\r\n\t\t// Format: https://res.cloudinary.com/YOUR_CLOUD_NAME/image/fetch/f_auto,q_auto,w_[WIDTH]/S3_URL\r\n\r\n\t\t// Replace with your actual Cloudinary cloud name if you have one\r\n\t\t// Otherwise, look at implementing a serverless function that can transform images\r\n\t\t// const cloudinaryBase = 'https://res.cloudinary.com/your-cloud-name/image/fetch';\r\n\t\t// const encodedUrl = encodeURIComponent(url);\r\n\t\t// return `${cloudinaryBase}/f_auto,q_auto,w_800/${encodedUrl}`;\r\n\r\n\t\t// Since we don't have Cloudinary credentials, we'll just return the original URL for now\r\n\t\treturn url;\r\n\t}\r\n\treturn url;\r\n};\r\n\r\nconst getImageDimensions = (url) => {\r\n\t// Simple image dimension estimation based on container\r\n\t// For gallery thumbnails (w-full h-64 object-cover)\r\n\tif (url.includes('/images/')) {\r\n\t\treturn {\r\n\t\t\twidth: 800,\r\n\t\t\theight: 400,\r\n\t\t};\r\n\t}\r\n\treturn {\r\n\t\twidth: 1200,\r\n\t\theight: 800,\r\n\t};\r\n};\r\n\r\nconst ImageOptimizer = ({\r\n\tsrc,\r\n\talt,\r\n\tclassName,\r\n\tsizes = '100vw',\r\n\tpriority = false,\r\n}) => {\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [error, setError] = useState(false);\r\n\tconst [optimizedSrc, setOptimizedSrc] = useState('');\r\n\r\n\t// Responsive image breakpoints\r\n\tconst breakpoints = [320, 640, 768, 1024, 1280];\r\n\r\n\tuseEffect(() => {\r\n\t\t// Get optimized version for the main image\r\n\t\tconst optimizedWebpUrl = getOptimizedImageUrl(src, 800, 'webp');\r\n\t\tsetOptimizedSrc(optimizedWebpUrl);\r\n\r\n\t\t// Preload the image\r\n\t\tconst img = new Image();\r\n\t\timg.src = optimizedWebpUrl;\r\n\t\timg.onload = () => setLoading(false);\r\n\t\timg.onerror = () => {\r\n\t\t\t// Fallback to original format if WebP fails\r\n\t\t\tconsole.warn('WebP image failed to load:', optimizedWebpUrl);\r\n\t\t\tsetError(true);\r\n\t\t\tconst fallbackImg = new Image();\r\n\t\t\tfallbackImg.src = src;\r\n\t\t\tfallbackImg.onload = () => setLoading(false);\r\n\t\t\tfallbackImg.onerror = () => setError(true);\r\n\t\t};\r\n\t}, [src]);\r\n\r\n\t// Generate srcset for responsive images\r\n\tconst generateSrcSet = () => {\r\n\t\treturn breakpoints\r\n\t\t\t.map((bp) => `${getOptimizedImageUrl(src, bp, 'webp')} ${bp}w`)\r\n\t\t\t.join(', ');\r\n\t};\r\n\r\n\tif (error) {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={`bg-gray-200 flex items-center justify-center ${className}`}\r\n\t\t\t>\r\n\t\t\t\t<span>Failed to load image</span>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tconst { width, height } = getImageDimensions(src);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{loading && (\r\n\t\t\t\t<div className={`bg-gray-200 animate-pulse ${className}`} />\r\n\t\t\t)}\r\n\t\t\t<img\r\n\t\t\t\tsrc={optimizedSrc || src}\r\n\t\t\t\tsrcSet={generateSrcSet()}\r\n\t\t\t\twidth={width}\r\n\t\t\t\theight={height}\r\n\t\t\t\talt={alt}\r\n\t\t\t\tclassName={`${className} ${loading ? 'hidden' : ''}`}\r\n\t\t\t\tloading={priority ? 'eager' : 'lazy'}\r\n\t\t\t\tsizes={sizes}\r\n\t\t\t\tstyle={{ opacity: loading ? 0 : 1 }}\r\n\t\t\t\tfetchPriority={priority ? 'high' : 'auto'}\r\n\t\t\t\tonError={(e) => {\r\n\t\t\t\t\t// If optimized image fails, fallback to original\r\n\t\t\t\t\tconsole.warn('Image failed to load:', e.target.src);\r\n\t\t\t\t\tif (e.target.src !== src) {\r\n\t\t\t\t\t\te.target.src = src;\r\n\t\t\t\t\t}\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t{priority && (\r\n\t\t\t\t<link\r\n\t\t\t\t\trel=\"preload\"\r\n\t\t\t\t\thref={optimizedSrc || src}\r\n\t\t\t\t\tas=\"image\"\r\n\t\t\t\t\tfetchPriority=\"high\"\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default ImageOptimizer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport ImageOptimizer from './ImageOptimizer';\r\n\r\nconst Carousel = ({ images }) => {\r\n\tconst [currentIndex, setCurrentIndex] = useState(0);\r\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\r\n\tconst [modalImageIndex, setModalImageIndex] = useState(null); // Track the index of the modal image\r\n\r\n\t// Automatically move to the next slide every 3 seconds\r\n\tuseEffect(() => {\r\n\t\tconst interval = setInterval(() => {\r\n\t\t\tsetCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n\t\t}, 3000); // 3 seconds interval\r\n\r\n\t\t// Clean up interval on unmount\r\n\t\treturn () => clearInterval(interval);\r\n\t}, [images.length]);\r\n\r\n\tconst nextSlide = () => {\r\n\t\tsetCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);\r\n\t};\r\n\r\n\tconst prevSlide = () => {\r\n\t\tsetCurrentIndex(\r\n\t\t\t(prevIndex) => (prevIndex - 1 + images.length) % images.length,\r\n\t\t);\r\n\t};\r\n\r\n\t// Open modal with selected image (for grid images only)\r\n\tconst openModal = (index) => {\r\n\t\tsetModalImageIndex(index); // Set the modal image to the clicked image index\r\n\t\tsetIsModalOpen(true);\r\n\t};\r\n\r\n\t// Close modal\r\n\tconst closeModal = () => {\r\n\t\tsetIsModalOpen(false);\r\n\t\tsetModalImageIndex(null); // Reset modal image index on close\r\n\t};\r\n\r\n\t// Navigate to the next image in the modal\r\n\tconst nextModalImage = (e) => {\r\n\t\te.stopPropagation(); // Prevent modal close when clicking on arrows\r\n\t\tsetModalImageIndex((prevIndex) => (prevIndex + 1) % images.length); // Cycle forward\r\n\t};\r\n\r\n\t// Navigate to the previous image in the modal\r\n\tconst prevModalImage = (e) => {\r\n\t\te.stopPropagation(); // Prevent modal close when clicking on arrows\r\n\t\tsetModalImageIndex(\r\n\t\t\t(prevIndex) => (prevIndex - 1 + images.length) % images.length,\r\n\t\t); // Cycle backward\r\n\t};\r\n\r\n\t// Preload the next few images\r\n\tuseEffect(() => {\r\n\t\t// Preload next 2 images\r\n\t\tconst preloadNextImages = () => {\r\n\t\t\tfor (let i = 1; i <= 2; i++) {\r\n\t\t\t\tconst nextIndex = (currentIndex + i) % images.length;\r\n\t\t\t\tconst img = new Image();\r\n\t\t\t\timg.src = images[nextIndex].url;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tif (images.length > 1) {\r\n\t\t\tpreloadNextImages();\r\n\t\t}\r\n\t}, [currentIndex, images]);\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{/* Modal for enlarging image */}\r\n\t\t\t{isModalOpen && (\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50\"\r\n\t\t\t\t\tonClick={closeModal} // Close modal when clicking outside image\r\n\t\t\t\t>\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={images[modalImageIndex].url} // Show the modal image based on the index\r\n\t\t\t\t\t\talt=\"Enlarged\"\r\n\t\t\t\t\t\tclassName=\"w-auto max-w-full h-auto max-h-full object-contain rounded-lg\"\r\n\t\t\t\t\t\tstyle={{ margin: '40px auto', maxHeight: '80vh' }} // Added margin on top and bottom\r\n\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t{/* Arrows for navigating the modal images */}\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={prevModalImage} // Navigate to the previous modal image\r\n\t\t\t\t\t\tclassName=\"absolute left-4 top-1/2 transform -translate-y-1/2 bg-white bg-opacity-50 hover:bg-opacity-100 text-black p-2 rounded-full\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t←\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={nextModalImage} // Navigate to the next modal image\r\n\t\t\t\t\t\tclassName=\"absolute right-4 top-1/2 transform -translate-y-1/2 bg-white bg-opacity-50 hover:bg-opacity-100 text-black p-2 rounded-full\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t→\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\r\n\t\t\t{/* Carousel */}\r\n\t\t\t<div className=\"relative w-full h-[500px] overflow-hidden rounded-lg shadow-lg\">\r\n\t\t\t\t{/* Images (no clickability on carousel images) */}\r\n\t\t\t\t{images.map((image, index) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tclassName={`absolute inset-0 transition-opacity duration-1000 ${\r\n\t\t\t\t\t\t\tindex === currentIndex ? 'opacity-100' : 'opacity-0'\r\n\t\t\t\t\t\t}`}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ImageOptimizer\r\n\t\t\t\t\t\t\tsrc={image.url}\r\n\t\t\t\t\t\t\talt={`slide ${index}`}\r\n\t\t\t\t\t\t\tclassName=\"w-full h-full object-contain rounded-lg\"\r\n\t\t\t\t\t\t\tpriority={index === 0} // Prioritize the first image\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\r\n\t\t\t\t{/* Controls */}\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={prevSlide}\r\n\t\t\t\t\tclassName=\"\r\n\t\t\t\t\tabsolute \r\n\t\t\t\t\ttop-1/2 \r\n\t\t\t\t\tleft-4 \r\n\t\t\t\t\ttransform -translate-y-1/2 \r\n\t\t\t\t\tbg-white \r\n\t\t\t\t\tbg-opacity-50 \r\n\t\t\t\t\thover:bg-opacity-100 \r\n\t\t\t\t\trounded-full p-2\"\r\n\t\t\t\t>\r\n\t\t\t\t\t←\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={nextSlide}\r\n\t\t\t\t\tclassName=\"\r\n\t\t\t\t\tabsolute \r\n\t\t\t\t\ttop-1/2 \r\n\t\t\t\t\tright-4 \r\n\t\t\t\t\ttransform -translate-y-1/2 \r\n\t\t\t\t\tbg-white \r\n\t\t\t\t\tbg-opacity-50 \r\n\t\t\t\t\thover:bg-opacity-100 \r\n\t\t\t\t\trounded-full \r\n\t\t\t\t\tp-2\"\r\n\t\t\t\t>\r\n\t\t\t\t\t→\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Grid below the carousel (clickable images) */}\r\n\t\t\t<div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 mt-10\">\r\n\t\t\t\t{images.map((image, index) => (\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\tclassName=\"w-full h-auto cursor-pointer\"\r\n\t\t\t\t\t\tonClick={() => openModal(index)} // Open modal for grid images, using the image index\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<ImageOptimizer\r\n\t\t\t\t\t\t\tsrc={image.url}\r\n\t\t\t\t\t\t\talt={image.title || `Gallery image ${index + 1}`}\r\n\t\t\t\t\t\t\tclassName=\"w-full h-64 object-cover rounded-lg shadow-lg\"\r\n\t\t\t\t\t\t\tpriority={index < 3 && currentIndex === 0} // Prioritize first 3 grid images on initial load\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Carousel;\r\n","// src/pages/GalleryCategory.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams, useLocation } from 'react-router-dom';\r\nimport Carousel from '../components/Carousel';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport { API } from '../api'; // Import the API instance\r\n\r\nconst IMAGES_PER_PAGE = 6; // Adjust this number as needed\r\n\r\nconst GalleryCategory = () => {\r\n\tconst { category } = useParams();\r\n\tconst [categoryData, setCategoryData] = useState(null);\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [displayedImages, setDisplayedImages] = useState([]);\r\n\tconst [currentPage, setCurrentPage] = useState(1);\r\n\tconst location = useLocation(); // Add this\r\n\tconst isAdminRoute = location.pathname.includes('/admin'); // Check if we're in admin route\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchCategoryData = async () => {\r\n\t\t\ttry {\r\n\t\t\t\tconst response = await API.get(`/images?category=${category}`); // Use API instance\r\n\t\t\t\tconst data = response.data; // Access data from response.data\r\n\r\n\t\t\t\t// Format and sort images by order\r\n\t\t\t\tconst formattedCategoryData = {\r\n\t\t\t\t\ttitle: category.charAt(0).toUpperCase() + category.slice(1),\r\n\t\t\t\t\timages: data.sort(\r\n\t\t\t\t\t\t(a, b) => (a.order ?? 0) - (b.order ?? 0),\r\n\t\t\t\t\t),\r\n\t\t\t\t};\r\n\r\n\t\t\t\tsetCategoryData(formattedCategoryData);\r\n\t\t\t\tsetDisplayedImages(\r\n\t\t\t\t\tformattedCategoryData.images.slice(0, IMAGES_PER_PAGE),\r\n\t\t\t\t);\r\n\t\t\t\tsetLoading(false);\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.error('Error fetching gallery data:', error);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tfetchCategoryData();\r\n\t\tsetCurrentPage(1); // Reset page when category changes\r\n\t}, [category, location.pathname]); // Add location.pathname as dependency\r\n\r\n\tconst handleShowMore = () => {\r\n\t\tconst nextPage = currentPage + 1;\r\n\t\tconst startIndex = 0;\r\n\t\tconst endIndex = nextPage * IMAGES_PER_PAGE;\r\n\r\n\t\tsetDisplayedImages(categoryData.images.slice(startIndex, endIndex));\r\n\t\tsetCurrentPage(nextPage);\r\n\t};\r\n\r\n\tconst hasMoreImages = categoryData?.images.length > displayedImages.length;\r\n\r\n\tif (loading) return <LoadingSpinner />;\r\n\r\n\tif (!categoryData) {\r\n\t\treturn (\r\n\t\t\t<h2 className=\"text-center text-red-600 mt-10\">\r\n\t\t\t\tCategory not found\r\n\t\t\t</h2>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"max-w-7xl mx-auto px-4 py-10 mt-10\">\r\n\t\t\t<h2 className=\"text-4xl font-bold text-center mb-6 capitalize\">\r\n\t\t\t\t{categoryData.title} Gallery\r\n\t\t\t\t<Helmet>\r\n\t\t\t\t\t<title>\r\n\t\t\t\t\t\t{isAdminRoute\r\n\t\t\t\t\t\t\t? 'Admin Panel | Dawid Siedlec'\r\n\t\t\t\t\t\t\t: `${categoryData?.title} Galleri | Dawid Siedlec`}\r\n\t\t\t\t\t</title>\r\n\t\t\t\t\t<meta\r\n\t\t\t\t\t\tname=\"description\"\r\n\t\t\t\t\t\tcontent={`Utforsk ${categoryData?.title}-bilder av høy kvalitet.`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{/* Add preconnect and dns-prefetch for AWS S3 */}\r\n\t\t\t\t\t<link\r\n\t\t\t\t\t\trel=\"preconnect\"\r\n\t\t\t\t\t\thref=\"https://ds-photo.s3.eu-north-1.amazonaws.com\"\r\n\t\t\t\t\t\tcrossOrigin=\"anonymous\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<link\r\n\t\t\t\t\t\trel=\"dns-prefetch\"\r\n\t\t\t\t\t\thref=\"https://ds-photo.s3.eu-north-1.amazonaws.com\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Helmet>\r\n\t\t\t</h2>\r\n\r\n\t\t\t{/* Carousel */}\r\n\t\t\t{displayedImages.length > 0 && (\r\n\t\t\t\t<Carousel images={displayedImages} />\r\n\t\t\t)}\r\n\r\n\t\t\t{/* Show More Button */}\r\n\t\t\t{hasMoreImages && (\r\n\t\t\t\t<div className=\"text-center mt-8\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={handleShowMore}\r\n\t\t\t\t\t\tclassName=\"bg-gray-800 text-white px-6 py-2 rounded-lg hover:bg-gray-700 transition-colors\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tVis {IMAGES_PER_PAGE} mer ({displayedImages.length} av{' '}\r\n\t\t\t\t\t\t{categoryData.images.length})\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default GalleryCategory;\r\n"],"names":["_ref","src","alt","className","sizes","priority","loading","setLoading","useState","error","setError","optimizedSrc","setOptimizedSrc","breakpoints","useEffect","optimizedWebpUrl","getOptimizedImageUrl","img","Image","onload","onerror","console","warn","fallbackImg","_jsx","concat","children","width","height","includes","_jsxs","_Fragment","srcSet","map","bp","join","style","opacity","fetchPriority","onError","e","target","rel","href","as","images","currentIndex","setCurrentIndex","isModalOpen","setIsModalOpen","modalImageIndex","setModalImageIndex","interval","setInterval","prevIndex","length","clearInterval","preloadNextImages","i","nextIndex","url","onClick","closeModal","margin","maxHeight","stopPropagation","image","index","ImageOptimizer","prevSlide","nextSlide","openModal","title","GalleryCategory","category","useParams","categoryData","setCategoryData","displayedImages","setDisplayedImages","currentPage","setCurrentPage","location","useLocation","isAdminRoute","pathname","async","data","API","get","formattedCategoryData","charAt","toUpperCase","slice","sort","a","b","_a$order","_b$order","order","fetchCategoryData","hasMoreImages","LoadingSpinner","Helmet","name","content","crossOrigin","Carousel","handleShowMore","nextPage","endIndex"],"sourceRoot":""}